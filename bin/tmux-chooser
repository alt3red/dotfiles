#!/bin/bash

# based off http://www.huyng.com/posts/productivity-boost-with-tmux-iterm2-workspaces/

# Get the window to have a theme
source ~/.bashrc.d/01-urxvt-dynamic-colors.sh

export TMUX_FALLBACK=""
FALLBACK_SHELL=$(getent passwd $(whoami) | awk -F : '{print $7}')
which tmux >/dev/null || exec $FALLBACK_SHELL
tmux -V >/dev/null 2>&1 || exec $FALLBACK_SHELL
unset TMUX_FALLBACK

# Split on newline, so we can have spaces in session names
OLDIFS="${IFS}"
IFS="
"
sessions=($(tmux list-sessions -F "#S"))
IFS="${OLDIFS}"

if [ ! -z ${LC_TMUX+x} ]; then
    # LC_TMUX is a hack, so that it is accepted through SSH
    # It holds a unique id of the terminal that called it, used for the autossh
    # connection.
    # We should loop through all the sessions, and if one has the same variable
    # set in the env, then connect, otherwise create a new one based on the below.
    LC_TMUX_TEST="${LC_TMUX}"
    unset LC_TMUX
    for ((i = 0; i < ${#sessions[@]}; i++)); do
        if source <(tmux show-environment -t "${sessions[$i]}" | grep ^LC_TMUX=) && [ "$LC_TMUX" = "$LC_TMUX_TEST" ]; then
            SESSION_NAME="${sessions[$i]}"
            break
        fi
    done
    export LC_TMUX="${LC_TMUX_TEST}"
    unset LC_TMUX_TEST
fi

if [ -z ${SESSION_NAME+x} ]; then
    # TODO: colorize this
    echo "Available sessions"
    echo "------------------"
    echo " "
    # Don't use select, doesn't support empty options...
    for ((i = 0; i < ${#sessions[@]}; i++)); do
        echo "$(( $i + 1 ))) ${sessions[$i]}"
    done;
    read -p "Please choose your session: " SESSION_NAME || exit
fi

if [[ $SESSION_NAME =~ ^[0-9]+$ ]] && [ $SESSION_NAME -gt 0 -a $SESSION_NAME -lt $(( ${#sessions[@]}+1 )) ]; then
    # Is a number in range of array, use the result
    exec tmux attach-session -t "${sessions[$(( $SESSION_NAME - 1 ))]}"
elif [ -z "$SESSION_NAME" ]; then
    # Blank, so just create new autonumbered session
    exec tmux new-session
else
    # Session name entered, so use that for a new (or existing)
    tmux has-session -t "$SESSION_NAME" >/dev/null 2>&1 && exec tmux attach-session -t "$SESSION_NAME" ||
    exec tmux new-session -s "$SESSION_NAME"
fi
